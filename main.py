# -*- coding: utf-8 -*-

# --- 1. –ò–ú–ü–û–†–¢–´ –ò –ù–ê–ß–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ---
import discord
from discord import ui, app_commands
from discord.ext import commands, tasks
import google.generativeai as genai
import os
from dotenv import load_dotenv
from flask import Flask
from threading import Thread
from PIL import Image
import io
import json
import random
import string
from datetime import datetime, time, timezone
import sys
import asyncio

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
MAIN_GUILD_ID = os.getenv("MAIN_GUILD_ID")
ADMIN_GUILD_ID = os.getenv("ADMIN_GUILD_ID")
CODE_CHANNEL_ID = os.getenv("CODE_CHANNEL_ID")
OWNER_USER_ID = os.getenv("OWNER_USER_ID")
LORE_CHANNEL_IDS = os.getenv("LORE_CHANNEL_IDS")


# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ ID –∏ –∫–ª—é—á–∏ –Ω–∞ –º–µ—Å—Ç–µ
if not all([DISCORD_TOKEN, GEMINI_API_KEY, MAIN_GUILD_ID, ADMIN_GUILD_ID, CODE_CHANNEL_ID, OWNER_USER_ID, LORE_CHANNEL_IDS]):
    raise ValueError("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û–¥–∏–Ω –∏–∑ –∫–ª—é—á–µ–π –∏–ª–∏ ID (DISCORD_TOKEN, GEMINI_API_KEY, *_GUILD_ID, CODE_CHANNEL_ID, OWNER_USER_ID, LORE_CHANNEL_IDS) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API Gemini
genai.configure(api_key=GEMINI_API_KEY)
gemini_model = genai.GenerativeModel('gemini-1.5-flash-latest')

# --- 2. –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ü–ï–†–ï–ú–ï–ù–ù–ê–Ø –ò –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –õ–û–†–ê ---
VALDES_LORE = ""

def load_lore_from_file():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç/–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –ª–æ—Ä –∏–∑ —Ñ–∞–π–ª–∞ –≤ –ø–∞–º—è—Ç—å –±–æ—Ç–∞."""
    global VALDES_LORE
    try:
        with open("file.txt", "r", encoding="utf-8") as f:
            VALDES_LORE = f.read()
        print("–õ–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ø–∞–º—è—Ç—å.")
    except FileNotFoundError:
        print("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –§–∞–π–ª 'file.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        VALDES_LORE = "–õ–æ—Ä –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞."

# --- 3. –°–ò–°–¢–ï–ú–ù–´–ï –ü–†–û–ú–ü–¢–´ ---
def get_optimizer_prompt(level):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –†–ü-–ø–æ—Å—Ç–æ–≤."""
    return f"""
–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–æ–ª–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ '–í–∞–ª—å–¥–µ—Å'. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —É–ª—É—á—à–∏—Ç—å –ø–æ—Å—Ç –∏–≥—Ä–æ–∫–∞, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è –ø—Ä–∞–≤–∏–ª–∞–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏ –∑–∞–º—ã—Å–ª—É.
–í–æ—Ç –ø–æ–ª–Ω—ã–π —Å–≤–æ–¥ –ø—Ä–∞–≤–∏–ª –∏ –ª–æ—Ä–∞ –º–∏—Ä–∞ '–í–∞–ª—å–¥–µ—Å':
--- –ù–ê–ß–ê–õ–û –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
{VALDES_LORE}
--- –ö–û–ù–ï–¶ –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---

**–ö–õ–Æ–ß–ï–í–´–ï –ü–†–ê–í–ò–õ–ê –û–§–û–†–ú–õ–ï–ù–ò–Ø –ü–û–°–¢–ê (–°–ê–ú–û–ï –í–ê–ñ–ù–û–ï):**
1.  **–î–ï–ô–°–¢–í–ò–Ø:** –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω—ã –≤ –¥–≤–æ–π–Ω—ã–µ –∑–≤–µ–∑–¥–æ—á–∫–∏. –ü—Ä–∏–º–µ—Ä: `**–û–Ω –ø–æ–¥–Ω—è–ª—Å—è —Å –∫—Ä–æ–≤–∞—Ç–∏ –∏ –ø–æ–¥–æ—à–µ–ª –∫ –æ–∫–Ω—É.**`
2.  **–ú–´–°–õ–ò:** –í—Å–µ –º—ã—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–∫–ª—é—á–µ–Ω—ã –≤ –æ–±—ã—á–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏. –ü—Ä–∏–º–µ—Ä: `"–ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –¥–µ–Ω—å."`
3.  **–†–ï–ß–¨:** –í—Å—è –ø—Ä—è–º–∞—è —Ä–µ—á—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –¥–µ—Ñ–∏—Å–∞ –∏ –ø—Ä–æ–±–µ–ª–∞. –ü—Ä–∏–º–µ—Ä: `- –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ.`
4.  –ö–∞–∂–¥—ã–π —Ç–∏–ø (–¥–µ–π—Å—Ç–≤–∏–µ, –º—ã—Å–ª—å, —Ä–µ—á—å) –¥–æ–ª–∂–µ–Ω, –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.

**–ó–û–õ–û–¢–´–ï –ü–†–ê–í–ò–õ–ê –û–ë–†–ê–ë–û–¢–ö–ò:**
1.  **–ü–û–í–ï–°–¢–í–û–í–ê–ù–ò–ï –û–¢ –¢–†–ï–¢–¨–ï–ì–û –õ–ò–¶–ê:** –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã –æ—Ç **—Ç—Ä–µ—Ç—å–µ–≥–æ –ª–∏—Ü–∞** (–û–Ω/–û–Ω–∞ –¥–µ–ª–∞–µ—Ç), –¥–∞–∂–µ –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–∞–ø–∏—Å–∞–ª –æ—Ç –ø–µ—Ä–≤–æ–≥–æ ('–Ø –¥–µ–ª–∞—é'). –≠—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.
2.  **–ù–ï –ë–£–î–¨ –°–û–ê–í–¢–û–†–û–ú:** –¢—ã –¥–æ–ª–∂–µ–Ω —É–ª—É—á—à–∞—Ç—å –¢–û–õ–¨–ö–û —Ç–æ, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –∏–≥—Ä–æ–∫. –°—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–ª–∏ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ –±—ã–ª–æ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ç–µ–∫—Å—Ç–µ.
3.  **–î–ò–ê–õ–û–ì–ò –ò –ú–´–°–õ–ò:** –ù–µ –º–µ–Ω—è–π —Å–º—ã—Å–ª –º—ã—Å–ª–µ–π –∏ –ø—Ä—è–º–æ–π —Ä–µ—á–∏.

**–ó–ê–î–ê–ß–ê 1: –ü–†–û–í–ï–†–ö–ê –ù–ê –ì–†–£–ë–´–ï –õ–û–†–ù–´–ï –û–®–ò–ë–ö–ò**
–ò—â–∏ —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ (–∞–≤—Ç–æ–º–∞—Ç—ã), –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –º–∞–≥–∏—è. –ï—Å–ª–∏ –Ω–∞—à–µ–ª ‚Äî –≤–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç "–û–®–ò–ë–ö–ê:" —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º.

**–ó–ê–î–ê–ß–ê 2: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–û–°–¢–ê (–µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç)**
–û–±—Ä–∞–±–æ—Ç–∞–π –ø–æ—Å—Ç —Å–æ–≥–ª–∞—Å–Ω–æ —É—Ä–æ–≤–Ω—é '{level}', —Å–æ–±–ª—é–¥–∞—è –≤—Å–µ '–ö–õ–Æ–ß–ï–í–´–ï –ü–†–ê–í–ò–õ–ê –û–§–û–†–ú–õ–ï–ù–ò–Ø' –∏ '–ó–û–õ–û–¢–´–ï –ü–†–ê–í–ò–õ–ê –û–ë–†–ê–ë–û–¢–ö–ò'.

*   **–£—Ä–æ–≤–µ–Ω—å '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏':**
    *   –¢–≤–æ—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –≤–∑—è—Ç—å —Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫–∞ –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —Å–æ–≥–ª–∞—Å–Ω–æ **'–ö–õ–Æ–ß–ï–í–´–ú –ü–†–ê–í–ò–õ–ê–ú –û–§–û–†–ú–õ–ï–ù–ò–Ø –ü–û–°–¢–ê'**.
    *   –ü–µ—Ä–µ–≤–µ–¥–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ç—Ä–µ—Ç—å–µ –ª–∏—Ü–æ.
    *   **–ó–ê–ü–†–ï–©–ï–ù–û** –¥–æ–±–∞–≤–ª—è—Ç—å, —É–±–∏—Ä–∞—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å —Å–ª–æ–≤–∞, –∫—Ä–æ–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è —Å–º–µ–Ω—ã –ª–∏—Ü–∞ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è (—è -> –æ–Ω/–æ–Ω–∞). –¢–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.

*   **–£—Ä–æ–≤–µ–Ω—å '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è':**
    *   –í—ã–ø–æ–ª–Ω–∏ –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤–æ–∫'.
    *   –ò—Å–ø—Ä–∞–≤—å –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏.
    *   –ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å **–û–î–ù–û** –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –æ–ø–∏—Å—ã–≤–∞—é—â–µ–µ —ç–º–æ—Ü–∏—é –∏–ª–∏ –¥–µ—Ç–∞–ª—å –æ–∫—Ä—É–∂–µ–Ω–∏—è, –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –¥–µ–π—Å—Ç–≤–∏–µ–º.

*   **–£—Ä–æ–≤–µ–Ω—å '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å':**
    *   –í—ã–ø–æ–ª–Ω–∏ –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏'.
    *   –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –æ–±–æ–≥–∞—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ **–∑–∞—è–≤–ª–µ–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏–π**. –ù–∞–ø—Ä–∏–º–µ—Ä, "–û–Ω –∏–¥–µ—Ç –Ω–∞ —É–ª–∏—Ü—É" –º–æ–∂–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ "**–¢—è–∂–µ–ª–æ —Å—Ç—É–ø–∞—è, –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ –∑–∞–ª–∏—Ç—É—é —Å–æ–ª–Ω—Ü–µ–º —É–ª–∏—Ü—É, —â—É—Ä—è—Å—å –æ—Ç —è—Ä–∫–æ–≥–æ —Å–≤–µ—Ç–∞.**"

**–§–ò–ù–ê–õ–¨–ù–û–ï –ü–†–ê–í–ò–õ–û:**
–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ. –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–µ–¥–∏—Å–ª–æ–≤–∏–π –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
"""

def get_lore_prompt():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª–æ—Ä—É."""
    return f"""
–¢—ã ‚Äî –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π –º–∏—Ä–∞ '–í–∞–ª—å–¥–µ—Å'. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–≥—Ä–æ–∫–æ–≤, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–µ–±–µ —Ç–µ–∫—Å—Ç–µ —Å –ª–æ—Ä–æ–º –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.

**–¢–í–û–ò –ü–†–ê–í–ò–õ–ê:**
1.  **–ò–°–¢–û–ß–ù–ò–ö ‚Äî –ó–ê–ö–û–ù:** –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑–≤–Ω–µ.
2.  **–ù–ï –î–û–î–£–ú–´–í–ê–ô:** –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏: "–í –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞—Ä—Ö–∏–≤–∞—Ö –Ω–µ—Ç —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É." –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω–µ –¥–æ–±–∞–≤–ª—è–π –∏—Å—Ç–æ—á–Ω–∏–∫–∏.
3.  **–°–¢–ò–õ–¨:** –û—Ç–≤–µ—á–∞–π —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –≤ —Å—Ç–∏–ª–µ –º—É–¥—Ä–æ–≥–æ –ª–µ—Ç–æ–ø–∏—Å—Ü–∞.
4.  **–¶–ò–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û):** –ü–æ—Å–ª–µ —Ç–≤–æ–µ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, —Ç—ã **–î–û–õ–ñ–ï–ù** –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å `%%SOURCES%%`. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –ø–µ—Ä–µ—á–∏—Å–ª–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –±—ã–ª–∞ –≤–∑—è—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ù–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–∞—Ö —Ñ–æ—Ä–º–∞—Ç–∞ `--- –ù–ê–ß–ê–õ–û –ö–ê–ù–ê–õ–ê: [–ò–º—è –∫–∞–Ω–∞–ª–∞] ---`.
    *   –ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∞: `–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å.%%SOURCES%%‚ïëüåü‚îÇ–∞—Å—Ç—Ä–æ–º–∞–Ω—Ç–∏—è, ‚ïëüß¨‚îÇ–≤–∏–¥—ã-—Ä–∞–∑—É–º–Ω—ã—Ö-—Å—É—â–Ω–æ—Å—Ç–µ–π`
    *   –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∑—è—Ç–∞ –∏–∑ –æ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞, —É–∫–∞–∂–∏ —Ç–æ–ª—å–∫–æ –µ–≥–æ.
    *   –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –ø–æ—Å–ª–µ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤.

–í–æ—Ç —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Ç–≤–æ–µ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π:
--- –ù–ê–ß–ê–õ–û –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
{VALDES_LORE}
--- –ö–û–ù–ï–¶ –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
"""

# --- 4. –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ô –ö–û–î (keep_alive, UI, —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–¥–æ–º –¥–æ—Å—Ç—É–ø–∞) ---
app = Flask('')
@app.route('/')
def home(): return "Bot is alive and running!"
def run(): app.run(host='0.0.0.0', port=8080)
def keep_alive(): Thread(target=run).start()

class OptimizedPostModal(ui.Modal, title='–í–∞—à —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ—Å—Ç'):
    def __init__(self, optimized_text: str):
        super().__init__()
        self.post_content = ui.TextInput(label="–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é", style=discord.TextStyle.paragraph, default=optimized_text, max_length=1800)
        self.add_item(self.post_content)
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.send_message("–û–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ.", ephemeral=True, delete_after=3)

class PostView(ui.View):
    def __init__(self, optimized_text: str):
        super().__init__(timeout=300)
        self.optimized_text = optimized_text
    @ui.button(label="üìù –ü–æ–∫–∞–∑–∞—Ç—å –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", style=discord.ButtonStyle.primary)
    async def show_modal_button(self, interaction: discord.Interaction, button: ui.Button):
        modal = OptimizedPostModal(self.optimized_text)
        await interaction.response.send_modal(modal)

DAILY_ACCESS_CODE = ""
CODE_FILE = "code.json"

def save_daily_code(code):
    data = {'code': code, 'date': datetime.now().strftime('%Y-%m-%d')}
    with open(CODE_FILE, 'w') as f:
        json.dump(data, f)

def load_daily_code():
    global DAILY_ACCESS_CODE
    try:
        with open(CODE_FILE, 'r') as f:
            data = json.load(f)
            if data['date'] == datetime.now().strftime('%Y-%m-%d'):
                DAILY_ACCESS_CODE = data['code']
                print(f"–ó–∞–≥—Ä—É–∂–µ–Ω —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞: {DAILY_ACCESS_CODE}")
                return
    except (FileNotFoundError, json.JSONDecodeError):
        print("–§–∞–π–ª —Å –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π.")
    
    new_code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    DAILY_ACCESS_CODE = new_code
    save_daily_code(new_code)
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –∫–æ–¥ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {DAILY_ACCESS_CODE}")

# --- 5. –ù–ê–°–¢–†–û–ô–ö–ê –ë–û–¢–ê ---
intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.guilds = True
bot = commands.Bot(command_prefix="!", intents=intents)

# --- 6. –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –ó–ê–î–ê–ß–ê –ì–ï–ù–ï–†–ê–¶–ò–ò –ö–û–î–ê ---
async def send_access_code_to_admin_channel(code: str, title: str, description: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ —Å –∫–æ–¥–æ–º –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –∞–¥–º–∏–Ω—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä."""
    try:
        admin_channel = bot.get_channel(int(CODE_CHANNEL_ID))
        if admin_channel:
            embed = discord.Embed(
                title=title,
                description=description,
                color=discord.Color.gold(),
                timestamp=datetime.now()
            )
            embed.add_field(name="–ö–æ–¥", value=f"```{code}```")
            embed.set_footer(text="–≠—Ç–æ—Ç –∫–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ –∫–æ–Ω—Ü–∞ —Ç–µ–∫—É—â–∏—Ö —Å—É—Ç–æ–∫ (–ø–æ UTC).")
            await admin_channel.send(embed=embed)
        else:
            print(f"–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {CODE_CHANNEL_ID} –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞.")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: {e}")

@tasks.loop(time=time(hour=0, minute=0, tzinfo=timezone.utc))
async def update_code_task():
    global DAILY_ACCESS_CODE
    
    new_code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    DAILY_ACCESS_CODE = new_code
    save_daily_code(new_code)
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ–¥: {new_code}")
    
    await send_access_code_to_admin_channel(
        code=new_code,
        title="üîë –ù–æ–≤—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞",
        description=f"–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/update_lore` –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 24 —á–∞—Å–∞:"
    )

@update_code_task.before_loop
async def before_update_code_task():
    await bot.wait_until_ready()

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    load_lore_from_file()
    load_daily_code()
    
    if not update_code_task.is_running():
        update_code_task.start()
        
    await send_access_code_to_admin_channel(
        code=DAILY_ACCESS_CODE,
        title="‚öôÔ∏è –¢–µ–∫—É—â–∏–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ (–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞)",
        description="–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω. –í–æ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:"
    )
    
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

# --- 7. –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê ---

@bot.tree.command(name="update_lore", description="[–ê–î–ú–ò–ù] –°–æ–±–∏—Ä–∞–µ—Ç –ª–æ—Ä –∏–∑ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª.")
@app_commands.describe(access_code="–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
async def update_lore(interaction: discord.Interaction, access_code: str):
    is_owner = str(interaction.user.id) == OWNER_USER_ID
    is_admin = interaction.user.guild_permissions.administrator

    if not (is_owner or is_admin):
        await interaction.response.send_message("‚ùå **–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞:** –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True)
        return
        
    if str(interaction.guild.id) != MAIN_GUILD_ID:
        await interaction.response.send_message("‚ùå **–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞:** –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
        return

    if access_code != DAILY_ACCESS_CODE:
        await interaction.response.send_message("‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞.** –ü–æ–ª—É—á–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
        return
        
    await interaction.response.defer(ephemeral=True, thinking=True)
    
    try:
        channel_ids = [int(id.strip()) for id in LORE_CHANNEL_IDS.split(',')]
    except ValueError:
        await interaction.followup.send("‚ùå **–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:** –°–ø–∏—Å–æ–∫ ID –∫–∞–Ω–∞–ª–æ–≤ –≤ .env —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.", ephemeral=True)
        return
        
    if not channel_ids:
        await interaction.followup.send("‚ùå **–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:** –°–ø–∏—Å–æ–∫ ID –∫–∞–Ω–∞–ª–æ–≤ –≤ .env –ø—É—Å—Ç.", ephemeral=True)
        return

    full_lore_text = ""
    parsed_channels_count = 0
    total_messages_count = 0
    
    channels_to_parse = []
    for channel_id in channel_ids:
        channel = bot.get_channel(channel_id)
        if channel and (isinstance(channel, discord.TextChannel) or isinstance(channel, discord.ForumChannel)):
            channels_to_parse.append(channel)
        else:
            print(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –µ–≥–æ —Ç–∏–ø –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")

    sorted_channels = sorted(channels_to_parse, key=lambda c: c.position)

    for channel in sorted_channels:
        full_lore_text += f"\n--- –ù–ê–ß–ê–õ–û –ö–ê–ù–ê–õ–ê: {channel.name} ---\n\n"
        
        if isinstance(channel, discord.ForumChannel):
            sorted_threads = sorted(channel.threads, key=lambda t: t.created_at)
            for thread in sorted_threads:
                try:
                    starter_message = await thread.fetch_message(thread.id)
                    if starter_message:
                        full_lore_text += f"--- –ù–∞—á–∞–ª–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {thread.name} ---\n\n"
                        content_found = False
                        if starter_message.content:
                            full_lore_text += starter_message.content + "\n\n"
                            content_found = True
                        if starter_message.embeds:
                            for embed in starter_message.embeds:
                                if embed.title: full_lore_text += f"**{embed.title}**\n"
                                if embed.description: full_lore_text += embed.description + "\n"
                                for field in embed.fields: full_lore_text += f"**{field.name}**\n{field.value}\n"
                                full_lore_text += "\n"
                            content_found = True
                        if content_found: total_messages_count += 1
                        full_lore_text += f"--- –ö–æ–Ω–µ—Ü –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {thread.name} ---\n\n"
                except discord.NotFound:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤–µ—Ç–∫–∏ '{thread.name}' (ID: {thread.id})")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ—Ç–∫–∏ '{thread.name}': {e}")
        
        else:
            async for message in channel.history(limit=500, oldest_first=True):
                content_found = False
                if message.content:
                    full_lore_text += message.content + "\n\n"
                    content_found = True
                if message.embeds:
                    for embed in message.embeds:
                        if embed.title: full_lore_text += f"**{embed.title}**\n"
                        if embed.description: full_lore_text += embed.description + "\n"
                        for field in embed.fields: full_lore_text += f"**{field.name}**\n{field.value}\n"
                        full_lore_text += "\n"
                    content_found = True
                if content_found:
                    total_messages_count += 1

        full_lore_text += f"--- –ö–û–ù–ï–¶ –ö–ê–ù–ê–õ–ê: {channel.name} ---\n"
        parsed_channels_count += 1

    try:
        with open("file.txt", "w", encoding="utf-8") as f:
            f.write(full_lore_text)
        
        load_lore_from_file()
        file_size = os.path.getsize("file.txt") / 1024
        
        embed = discord.Embed(title="‚úÖ –õ–æ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", description="–§–∞–π–ª `file.txt` –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.", color=discord.Color.green())
        embed.add_field(name="–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–Ω–∞–ª–æ–≤", value=str(parsed_channels_count), inline=True)
        embed.add_field(name="–°–æ–±—Ä–∞–Ω–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π/—Å–æ–æ–±—â–µ–Ω–∏–π", value=str(total_messages_count), inline=True)
        embed.add_field(name="–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞", value=f"{file_size:.2f} –ö–ë", inline=True)
        
        await interaction.followup.send(
            embed=embed,
            file=discord.File("file.txt"),
            ephemeral=True
        )

        await interaction.followup.send("‚úÖ **–õ–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω.** –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é—Å—å –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...", ephemeral=True)
        await asyncio.sleep(5)
        
        print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ—Ä–∞...")
        sys.exit()
        
    except Exception as e:
        await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}", ephemeral=True)

@bot.tree.command(name="optimize_post", description="–£–ª—É—á—à–∞–µ—Ç –†–ü-–ø–æ—Å—Ç, –ø—Ä–∏–Ω–∏–º–∞—è —Ç–µ–∫—Å—Ç –∏ —É—Ä–æ–≤–µ–Ω—å —É–ª—É—á—à–µ–Ω–∏—è.")
@app_commands.describe(
    post_text="–¢–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è.",
    optimization_level="–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å —É–ª—É—á—à–µ–Ω–∏—è.",
    image="(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞."
)
@app_commands.choices(optimization_level=[
    discord.app_commands.Choice(name="–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏", value="minimal"),
    discord.app_commands.Choice(name="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", value="standard"),
    discord.app_commands.Choice(name="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å", value="creative"),
])
async def optimize_post(interaction: discord.Interaction, post_text: str, optimization_level: discord.app_commands.Choice[str], image: discord.Attachment = None):
    await interaction.response.defer(ephemeral=True, thinking=True)
    
    if image and (not image.content_type or not image.content_type.startswith("image/")):
        await interaction.followup.send("‚ùå **–û—à–∏–±–∫–∞:** –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.", ephemeral=True)
        return

    level_map = {"minimal": "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏", "standard": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", "creative": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"}
    prompt = get_optimizer_prompt(level_map[optimization_level.value])
    
    content_to_send = [prompt, f"\n\n–ü–æ—Å—Ç –∏–≥—Ä–æ–∫–∞:\n---\n{post_text}"]
    
    if image:
        try:
            image_bytes = await image.read()
            pil_image = Image.open(io.BytesIO(image_bytes))
            content_to_send.append(pil_image)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
            await interaction.followup.send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–æ —è –ø–æ–ø—Ä–æ–±—É—é —É–ª—É—á—à–∏—Ç—å —Ç–µ–∫—Å—Ç –±–µ–∑ –Ω–µ–≥–æ.", ephemeral=True)

    try:
        response = await gemini_model.generate_content_async(content_to_send)
        result_text = response.text.strip()

        if result_text.startswith("–û–®–ò–ë–ö–ê:"):
            error_embed = discord.Embed(title="‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≥—Ä—É–±–∞—è –ª–æ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞!", description=result_text.replace("–û–®–ò–ë–ö–ê:", "").strip(), color=discord.Color.red())
            await interaction.followup.send(embed=error_embed, ephemeral=True)
        else:
            embed = discord.Embed(title="‚ú® –í–∞—à –ø–æ—Å—Ç –±—ã–ª –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!", color=discord.Color.gold())
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º `post_text` –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ–≥–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            embed.add_field(name="‚ñ∂Ô∏è –û—Ä–∏–≥–∏–Ω–∞–ª:", value=f"```\n{post_text[:1000]}\n```", inline=False)
            embed.add_field(name="‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è (–ø—Ä–µ–≤—å—é):", value=f"{result_text[:1000]}...", inline=False)
            embed.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç.")
            view = PostView(result_text)
            await interaction.followup.send(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –≤ /optimize_post: {e}")
        error_embed = discord.Embed(title="üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞", description="–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", color=discord.Color.dark_red())
        await interaction.followup.send(embed=error_embed, ephemeral=True)

@bot.tree.command(name="ask_lore", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ –º–∏—Ä—É, –ø—Ä–∞–≤–∏–ª–∞–º –∏ –ª–æ—Ä—É '–í–∞–ª—å–¥–µ—Å–∞'")
@app_commands.describe(question="–í–∞—à –≤–æ–ø—Ä–æ—Å –•—Ä–∞–Ω–∏—Ç–µ–ª—é –∑–Ω–∞–Ω–∏–π.")
async def ask_lore(interaction: discord.Interaction, question: str):
    await interaction.response.defer(ephemeral=False)
    try:
        prompt = get_lore_prompt()
        response = await gemini_model.generate_content_async([prompt, f"\n\n–í–æ–ø—Ä–æ—Å –∏–≥—Ä–æ–∫–∞: {question}"])
        raw_text = response.text.strip()

        answer_text = raw_text
        sources_text = ""
        if "%%SOURCES%%" in raw_text:
            parts = raw_text.split("%%SOURCES%%")
            answer_text = parts[0].strip()
            sources_text = parts[1].strip()

        embed = discord.Embed(title="üìú –û—Ç–≤–µ—Ç –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤ –í–∞–ª—å–¥–µ—Å–∞", description=answer_text, color=discord.Color.blue())
        embed.add_field(name="–í–∞—à –∑–∞–ø—Ä–æ—Å:", value=question, inline=False)
        
        if sources_text:
            embed.add_field(name="–ò—Å—Ç–æ—á–Ω–∏–∫–∏:", value=sources_text, inline=False)
            
        embed.set_footer(text=f"–û—Ç–≤–µ—Ç–∏–ª –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π | –ó–∞–ø—Ä–æ—Å–∏–ª: {interaction.user.display_name}")
        await interaction.followup.send(embed=embed)

    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ /ask_lore: {e}")
        error_embed = discord.Embed(title="üö´ –û—à–∏–±–∫–∞ –≤ –∞—Ä—Ö–∏–≤–µ", description="–•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–∑-–∑–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏.", color=discord.Color.dark_red())
        await interaction.followup.send(embed=error_embed, ephemeral=True)

@bot.tree.command(name="help", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.")
async def help(interaction: discord.Interaction):
    embed = discord.Embed(
        title="üìú –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
        description="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ:",
        color=discord.Color.blue()
    )
    embed.add_field(name="/optimize_post", value="–£–ª—É—á—à–∞–µ—Ç –≤–∞—à –†–ü-–ø–æ—Å—Ç. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç, —É—Ä–æ–≤–µ–Ω—å —É–ª—É—á—à–µ–Ω–∏—è –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.", inline=False)
    embed.add_field(name="/ask_lore", value="–ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –•—Ä–∞–Ω–∏—Ç–µ–ª—é –∑–Ω–∞–Ω–∏–π –ø–æ –º–∏—Ä—É '–í–∞–ª—å–¥–µ—Å–∞'. –û—Ç–≤–µ—Ç –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤—Å–µ–º –≤ –∫–∞–Ω–∞–ª–µ.", inline=False)
    embed.add_field(name="/about", value="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –∏ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ.", inline=False)
    embed.add_field(name="/help", value="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.", inline=False)
    embed.add_field(name="/update_lore", value="**[–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤]**\n–°–æ–±–∏—Ä–∞–µ—Ç –ª–æ—Ä –∏–∑ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤, –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞.", inline=False)
    
    embed.set_footer(text="–í–∞—à –≤–µ—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –í–∞–ª—å–¥–µ—Å–∞.")
    
    await interaction.response.send_message(embed=embed, ephemeral=True)


@bot.tree.command(name="about", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –∏ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ.")
async def about(interaction: discord.Interaction):
    embed = discord.Embed(
        title="–û –±–æ—Ç–µ '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –í–∞–ª—å–¥–µ—Å–∞'",
        description="–Ø ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ –∏–≥—Ä–æ–∫–∞–º –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–æ–ª–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ '–í–∞–ª—å–¥–µ—Å'.\n\n–ú–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–µ–ª–∞—Ç—å –≤–∞—à–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –º–∏—Ä –±–æ–ª–µ–µ –≥–ª–∞–¥–∫–∏–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º, –æ—Ç–≤–µ—á–∞—è –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª–æ—Ä—É –∏ –ø–æ–º–æ–≥–∞—è —Å –∫–∞—á–µ—Å—Ç–≤–æ–º –≤–∞—à–∏—Ö –ø–æ—Å—Ç–æ–≤.",
        color=discord.Color.gold()
    )
    embed.add_field(name="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", value="**GX**", inline=True)
    embed.add_field(name="–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", value="‚Ä¢ Discord.py\n‚Ä¢ Google Gemini API", inline=True)
    embed.set_footer(text=f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {interaction.guild.name}")
    
    await interaction.response.send_message(embed=embed, ephemeral=False)

# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
if __name__ == "__main__":
    keep_alive()
    bot.run(DISCORD_TOKEN)
