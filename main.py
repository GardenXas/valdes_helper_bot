# -*- coding: utf-8 -*-

# --- 1. –ò–ú–ü–û–†–¢–´ –ò –ù–ê–ß–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ---
import discord
from discord import ui, app_commands
from discord.ext import commands
import google.generativeai as genai
import os
from dotenv import load_dotenv
from flask import Flask
from threading import Thread
from PIL import Image
import io

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ç–æ–∫–µ–Ω—ã)
load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–æ–≤
if not DISCORD_TOKEN or not GEMINI_API_KEY:
    raise ValueError("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω—ã DISCORD_TOKEN –∏–ª–∏ GEMINI_API_KEY –≤ –≤–∞—à–µ–º .env —Ñ–∞–π–ª–µ.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Gemini API
genai.configure(api_key=GEMINI_API_KEY)
gemini_model = genai.GenerativeModel('gemini-1.5-flash-latest')


# --- 2. –ó–ê–ì–†–£–ó–ö–ê –õ–û–†–ê –ò–ó –§–ê–ô–õ–ê ---
try:
    with open("file.txt", "r", encoding="utf-8") as f:
        VALDES_LORE = f.read()
except FileNotFoundError:
    print("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –§–∞–π–ª —Å –ª–æ—Ä–æ–º 'file.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    VALDES_LORE = "–õ–æ—Ä –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞."


# --- 3. –°–ò–°–¢–ï–ú–ù–´–ï –ü–†–û–ú–ü–¢–´ –î–õ–Ø –ù–ï–ô–†–û–°–ï–¢–ò ---

def get_optimizer_prompt(level):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–¥–∞—á–∏ —É–ª—É—á—à–µ–Ω–∏—è –†–ü-–ø–æ—Å—Ç–æ–≤.
    """
    return f"""
–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–æ–ª–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ '–í–∞–ª—å–¥–µ—Å'. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —É–ª—É—á—à–∏—Ç—å –ø–æ—Å—Ç –∏–≥—Ä–æ–∫–∞, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è –µ–≥–æ –∑–∞–º—ã—Å–ª—É.

–í–æ—Ç –ø–æ–ª–Ω—ã–π —Å–≤–æ–¥ –ø—Ä–∞–≤–∏–ª –∏ –ª–æ—Ä–∞ –º–∏—Ä–∞ '–í–∞–ª—å–¥–µ—Å':
--- –ù–ê–ß–ê–õ–û –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
{VALDES_LORE}
--- –ö–û–ù–ï–¶ –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---

**–ó–û–õ–û–¢–´–ï –ü–†–ê–í–ò–õ–ê (–í–ê–ñ–ù–ï–ï –í–°–ï–ì–û): –ù–ï –ë–£–î–¨ –°–û–ê–í–¢–û–†–û–ú!**
–¢—ã –¥–æ–ª–∂–µ–Ω —É–ª—É—á—à–∞—Ç—å –¢–û–õ–¨–ö–û —Ç–æ, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –∏–≥—Ä–æ–∫. –°—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ:
1.  **–ù–ï –î–û–ë–ê–í–õ–Ø–ô –ù–û–í–´–• –î–ï–ô–°–¢–í–ò–ô:** –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≤—Å—Ç–∞–ª —Å –∫—Ä–æ–≤–∞—Ç–∏, —Ç—ã –º–æ–∂–µ—à—å –æ–ø–∏—Å–∞—Ç—å, –ö–ê–ö –æ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞–ª, –Ω–æ –ù–ï–õ–¨–ó–Ø –¥–æ–±–∞–≤–ª—è—Ç—å, —á—Ç–æ –æ–Ω –ø–æ—à–µ–ª –∫ –¥–≤–µ—Ä–∏.
2.  **–ù–ï –ü–†–ò–î–£–ú–´–í–ê–ô –ú–û–¢–ò–í–ê–¶–ò–Æ:** –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –∫—Ä–∏–∫–Ω—É–ª "–ë–õ–Ø–¢–¨", —Ç—ã –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–¥–∞—Ç—å —ç–º–æ—Ü–∏—é, –∞ –ù–ï –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É (–≥–æ–ª–æ–¥, –ø–ª–æ—Ö–æ–π —Å–æ–Ω).
3.  **–ù–ï –ú–ï–ù–Ø–ô –î–ò–ê–õ–û–ì–ò:** –ï—Å–ª–∏ —ç—Ç–æ –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏–µ –≤ –ø—É—Å—Ç–æ—Ç—É, –ù–ï –¥–æ–±–∞–≤–ª—è–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.
4.  **–ù–ï –ú–ï–ù–Ø–ô –ü–û–í–ï–°–¢–í–û–í–ê–ù–ò–ï (–õ–ò–¶–û):** –ï—Å–ª–∏ –ø–æ—Å—Ç –Ω–∞–ø–∏—Å–∞–Ω –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ ('–Ø –±–µ–≥—É'), —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ—Å—Ç **–û–ë–Ø–ó–ê–ù** –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞. –ï—Å–ª–∏ –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ ('–û–Ω –±–µ–∂–∏—Ç'), –æ–Ω –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ. –≠—Ç–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ.

**–ó–ê–î–ê–ß–ê 1: –ü–†–û–í–ï–†–ö–ê –ù–ê –ì–†–£–ë–´–ï –õ–û–†–ù–´–ï –û–®–ò–ë–ö–ò**
–ò—â–∏ —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ (–∞–≤—Ç–æ–º–∞—Ç—ã, –º–∞—à–∏–Ω—ã), –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –º–∞–≥–∏—è –¥–ª—è —Ä–∞—Å—ã.
–ï—Å–ª–∏ –Ω–∞—à–µ–ª ‚Äî –≤–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç "–û–®–ò–ë–ö–ê:" —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º. –ú–∞—Ç –∏ —Å—Ç–∏–ª—å –∞—Ä—Ç–∞ –æ—à–∏–±–∫–æ–π –ù–ï —Å—á–∏—Ç–∞—é—Ç—Å—è.

**–ó–ê–î–ê–ß–ê 2: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–û–°–¢–ê (–µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç)**
–û–±—Ä–∞–±–æ—Ç–∞–π –ø–æ—Å—Ç —Å–æ–≥–ª–∞—Å–Ω–æ —É—Ä–æ–≤–Ω—é '{level}', —Å–æ–±–ª—é–¥–∞—è –≤—Å–µ "–ó–æ–ª–æ—Ç—ã–µ –ü—Ä–∞–≤–∏–ª–∞".

1.  **–£—Ä–æ–≤–µ–Ω—å '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏':**
    *   –¢–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É. –ú–∞—Ç –∑–∞–º–µ–Ω–∏ –Ω–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ß–µ—Ä—Ç!").
    *   –ù–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–ª—è–π.

2.  **–£—Ä–æ–≤–µ–Ω—å '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è':**
    *   –°–¥–µ–ª–∞–π —Ç–æ –∂–µ, —á—Ç–æ –∏ –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º.
    *   –î–æ–±–∞–≤—å –û–î–ù–û –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –æ–ø–∏—Å—ã–≤–∞—é—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ò–õ–ò —ç–º–æ—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–µ–º/—Å–ª–æ–≤–∞–º–∏.

3.  **–£—Ä–æ–≤–µ–Ω—å '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å':**
    *   –°–¥–µ–ª–∞–π —Ç–æ –∂–µ, —á—Ç–æ –∏ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º.
    *   –ö—Ä–∞—Å–æ—á–Ω–æ –æ–ø–∏—à–∏ **–∑–∞—è–≤–ª–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ**, —Å–æ—Ö—Ä–∞–Ω—è—è –ª–∏—Ü–æ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä, "–Ø –±–µ–≥—É –Ω–∞ —É–ª–∏—Ü—É" –º–æ–∂–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ "*–°—Ä—ã–≤–∞—è—Å—å —Å –º–µ—Å—Ç–∞, —è –≤—ã–±–µ–≥–∞—é –Ω–∞ —Ö–æ–ª–æ–¥–Ω—É—é —É–ª–∏—Ü—É, —á—É–≤—Å—Ç–≤—É—è, –∫–∞–∫ –≤–µ—Ç–µ—Ä –±—å–µ—Ç –≤ –ª–∏—Ü–æ.*"

**–§–ò–ù–ê–õ–¨–ù–û–ï –ü–†–ê–í–ò–õ–û:**
–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ. –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–µ–¥–∏—Å–ª–æ–≤–∏–π.
"""

def get_lore_prompt():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–¥–∞—á–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª–æ—Ä—É.
    """
    return f"""
–¢—ã ‚Äî –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π –º–∏—Ä–∞ '–í–∞–ª—å–¥–µ—Å'. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–≥—Ä–æ–∫–æ–≤, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–µ–±–µ —Ç–µ–∫—Å—Ç–µ —Å –ª–æ—Ä–æ–º –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.

**–¢–í–û–ò –ü–†–ê–í–ò–õ–ê:**
1.  **–ò–°–¢–û–ß–ù–ò–ö ‚Äî –ó–ê–ö–û–ù:** –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑–≤–Ω–µ.
2.  **–ù–ï –î–û–î–£–ú–´–í–ê–ô:** –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏: "–í –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞—Ä—Ö–∏–≤–∞—Ö –Ω–µ—Ç —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É."
3.  **–ë–£–î–¨ –¢–û–ß–ï–ù:** –î–∞–≤–∞–π —á—ë—Ç–∫–∏–µ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –ï—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ, –º–æ–∂–µ—à—å —Ü–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Ç–µ–∫—Å—Ç–∞.
4.  **–°–¢–ò–õ–¨:** –û—Ç–≤–µ—á–∞–π —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –≤ —Å—Ç–∏–ª–µ –º—É–¥—Ä–æ–≥–æ –ª–µ—Ç–æ–ø–∏—Å—Ü–∞.

–í–æ—Ç —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Ç–≤–æ–µ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π:
--- –ù–ê–ß–ê–õ–û –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
{VALDES_LORE}
--- –ö–û–ù–ï–¶ –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
"""


# --- 4. –ö–û–î –î–õ–Ø –ü–û–î–î–ï–†–ñ–ê–ù–ò–Ø –†–ê–ë–û–¢–´ –ë–û–¢–ê 24/7 ---
app = Flask('')
@app.route('/')
def home(): return "Bot is alive and running!"
def run(): app.run(host='0.0.0.0', port=8080)
def keep_alive(): Thread(target=run).start()


# --- 5. –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï UI –≠–õ–ï–ú–ï–ù–¢–´ (–ò–ù–¢–ï–†–§–ï–ô–°) ---

class OptimizedPostModal(ui.Modal, title='–í–∞—à —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ—Å—Ç'):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞."""
    def __init__(self, optimized_text: str):
        super().__init__()
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –≤–Ω—É—Ç—Ä–∏ –æ–∫–Ω–∞
        self.post_content = ui.TextInput(
            label="–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é",
            style=discord.TextStyle.paragraph,
            default=optimized_text,
            required=False,
            max_length=1800, # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–æ–ª—è
        )
        self.add_item(self.post_content)

    async def on_submit(self, interaction: discord.Interaction):
        # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã —É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –±—ã–ª–∞ –∫–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å".
        # –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ.
        await interaction.response.send_message("–û–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ.", ephemeral=True, delete_after=3)

class PostView(ui.View):
    """–ö–ª–∞—Å—Å '–í–∏–¥–∞', –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞."""
    def __init__(self, optimized_text: str):
        super().__init__(timeout=300) # –ö–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–Ω–∞ 5 –º–∏–Ω—É—Ç
        self.optimized_text = optimized_text

    @ui.button(label="üìù –ü–æ–∫–∞–∑–∞—Ç—å –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", style=discord.ButtonStyle.primary)
    async def show_modal_button(self, interaction: discord.Interaction, button: ui.Button):
        """–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ."""
        modal = OptimizedPostModal(self.optimized_text)
        await interaction.response.send_modal(modal)


# --- 6. –û–°–ù–û–í–ù–û–ô –ö–û–î –ë–û–¢–ê –ò –ö–û–ú–ê–ù–î–´ ---
intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞."""
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

@bot.tree.command(name="optimize_post", description="–£–ª—É—á—à–∞–µ—Ç –†–ü-–ø–æ—Å—Ç —Å –ø–æ–º–æ—â—å—é —É–¥–æ–±–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.")
@app_commands.describe(
    post_text="–¢–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è.",
    optimization_level="–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Å–∏–ª—å–Ω–æ –Ω—É–∂–Ω–æ —É–ª—É—á—à–∞—Ç—å –ø–æ—Å—Ç.",
    image="(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞."
)
@app_commands.choices(optimization_level=[
    discord.app_commands.Choice(name="–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ (–≥—Ä–∞–º–º–∞—Ç–∏–∫–∞, —Ñ–æ—Ä–º–∞—Ç)", value="minimal"),
    discord.app_commands.Choice(name="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è (–Ω–µ–º–Ω–æ–≥–æ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã)", value="standard"),
    discord.app_commands.Choice(name="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (–∫—Ä–∞—Å–æ—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ)", value="creative"),
])
async def optimize_post(
    interaction: discord.Interaction,
    post_text: str,
    optimization_level: discord.app_commands.Choice[str],
    image: discord.Attachment = None
):
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –†–ü-–ø–æ—Å—Ç–æ–≤."""
    await interaction.response.defer(ephemeral=True, thinking=True)

    level_map = {
        "minimal": "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏",
        "standard": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
        "creative": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"
    }
    prompt = get_optimizer_prompt(level_map[optimization_level.value])
    content_to_send = [prompt, f"\n\n–ü–æ—Å—Ç –∏–≥—Ä–æ–∫–∞:\n---\n{post_text}"]

    if image:
        if image.content_type and image.content_type.startswith("image/"):
            try:
                image_bytes = await image.read()
                pil_image = Image.open(io.BytesIO(image_bytes))
                content_to_send.append(pil_image)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {e}")

    try:
        response = await gemini_model.generate_content_async(content_to_send)
        result_text = response.text.strip()

        if result_text.startswith("–û–®–ò–ë–ö–ê:"):
            error_embed = discord.Embed(
                title="‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≥—Ä—É–±–∞—è –ª–æ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞!",
                description=result_text.replace("–û–®–ò–ë–ö–ê:", "").strip(),
                color=discord.Color.red()
            )
            error_embed.set_footer(text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –ø–æ—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–∏—Ä–∞ '–í–∞–ª—å–¥–µ—Å'.")
            await interaction.followup.send(embed=error_embed, ephemeral=True)
        else:
            embed = discord.Embed(
                title="‚ú® –í–∞—à –ø–æ—Å—Ç –±—ã–ª –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!",
                color=discord.Color.gold()
            )
            embed.add_field(name="‚ñ∂Ô∏è –û—Ä–∏–≥–∏–Ω–∞–ª:", value=f"```\n{post_text[:1000]}\n```", inline=False)
            embed.add_field(name="‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è (–ø—Ä–µ–≤—å—é):", value=f"{result_text[:1000]}...", inline=False)
            embed.set_footer(text=f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.")

            view = PostView(result_text)
            await interaction.followup.send(embed=embed, view=view, ephemeral=True)

    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini: {e}")
        error_embed = discord.Embed(
            title="üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞",
            description="–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –í–æ–∑–º–æ–∂–Ω–æ, API –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.",
            color=discord.Color.dark_red()
        )
        await interaction.followup.send(embed=error_embed, ephemeral=True)

@bot.tree.command(name="ask_lore", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ –º–∏—Ä—É, –ø—Ä–∞–≤–∏–ª–∞–º –∏ –ª–æ—Ä—É '–í–∞–ª—å–¥–µ—Å–∞'")
@app_commands.describe(question="–í–∞—à –≤–æ–ø—Ä–æ—Å –•—Ä–∞–Ω–∏—Ç–µ–ª—é –∑–Ω–∞–Ω–∏–π.")
async def ask_lore(interaction: discord.Interaction, question: str):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ª–æ—Ä—É –∏–≥—Ä—ã."""
    await interaction.response.defer(ephemeral=False) # –û—Ç–≤–µ—Ç –≤–∏–¥–µ–Ω –≤—Å–µ–º –≤ –∫–∞–Ω–∞–ª–µ

    try:
        prompt = get_lore_prompt()
        response = await gemini_model.generate_content_async([prompt, f"\n\n–í–æ–ø—Ä–æ—Å –∏–≥—Ä–æ–∫–∞: {question}"])
        answer_text = response.text.strip()

        embed = discord.Embed(
            title="üìú –û—Ç–≤–µ—Ç –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤ –í–∞–ª—å–¥–µ—Å–∞",
            description=answer_text,
            color=discord.Color.blue()
        )
        embed.add_field(name="–í–∞—à –∑–∞–ø—Ä–æ—Å:", value=question, inline=False)
        embed.set_footer(text=f"–û—Ç–≤–µ—Ç–∏–ª –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π | –ó–∞–ø—Ä–æ—Å–∏–ª: {interaction.user.display_name}")

        await interaction.followup.send(embed=embed)

    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ª–æ—Ä–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞: {e}")
        error_embed = discord.Embed(
            title="üö´ –û—à–∏–±–∫–∞ –≤ –∞—Ä—Ö–∏–≤–µ",
            description="–•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–∑-–∑–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –µ–≥–æ –ø–æ–∑–∂–µ.",
            color=discord.Color.dark_red()
        )
        await interaction.followup.send(embed=error_embed, ephemeral=True)


# --- 7. –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
if __name__ == "__main__":
    keep_alive() # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–¥–ª—è Replit –∏ –ø–æ–¥–æ–±–Ω—ã—Ö)
    bot.run(DISCORD_TOKEN)
