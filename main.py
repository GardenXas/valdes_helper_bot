# -*- coding: utf-8 -*-

# --- 1. –ò–ú–ü–û–†–¢–´ –ò –ù–ê–ß–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ---
import discord
from discord import ui, app_commands
from discord.ext import commands, tasks
import google.generativeai as genai
import os
from dotenv import load_dotenv
from flask import Flask
from threading import Thread
from PIL import Image
import io
import json
import random
import string
from datetime import datetime, time, timezone

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
MAIN_GUILD_ID = os.getenv("MAIN_GUILD_ID")
ADMIN_GUILD_ID = os.getenv("ADMIN_GUILD_ID")
CODE_CHANNEL_ID = os.getenv("CODE_CHANNEL_ID")
OWNER_USER_ID = os.getenv("OWNER_USER_ID")


# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ ID –∏ –∫–ª—é—á–∏ –Ω–∞ –º–µ—Å—Ç–µ
if not all([DISCORD_TOKEN, GEMINI_API_KEY, MAIN_GUILD_ID, ADMIN_GUILD_ID, CODE_CHANNEL_ID, OWNER_USER_ID]):
    raise ValueError("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û–¥–∏–Ω –∏–∑ –∫–ª—é—á–µ–π –∏–ª–∏ ID (DISCORD_TOKEN, GEMINI_API_KEY, *_GUILD_ID, CODE_CHANNEL_ID, OWNER_USER_ID) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API Gemini
genai.configure(api_key=GEMINI_API_KEY)
gemini_model = genai.GenerativeModel('gemini-1.5-flash-latest')

# --- 2. –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ü–ï–†–ï–ú–ï–ù–ù–ê–Ø –ò –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –õ–û–†–ê ---
VALDES_LORE = ""

def load_lore_from_file():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç/–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –ª–æ—Ä –∏–∑ —Ñ–∞–π–ª–∞ –≤ –ø–∞–º—è—Ç—å –±–æ—Ç–∞."""
    global VALDES_LORE
    try:
        with open("file.txt", "r", encoding="utf-8") as f:
            VALDES_LORE = f.read()
        print("–õ–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ø–∞–º—è—Ç—å.")
    except FileNotFoundError:
        print("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –§–∞–π–ª 'file.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        VALDES_LORE = "–õ–æ—Ä –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞."

# --- 3. –°–ò–°–¢–ï–ú–ù–´–ï –ü–†–û–ú–ü–¢–´ ---
def get_optimizer_prompt(level):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –†–ü-–ø–æ—Å—Ç–æ–≤."""
    return f"""
–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–æ–ª–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ '–í–∞–ª—å–¥–µ—Å'. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —É–ª—É—á—à–∏—Ç—å –ø–æ—Å—Ç –∏–≥—Ä–æ–∫–∞, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è –µ–≥–æ –∑–∞–º—ã—Å–ª—É.
–í–æ—Ç –ø–æ–ª–Ω—ã–π —Å–≤–æ–¥ –ø—Ä–∞–≤–∏–ª –∏ –ª–æ—Ä–∞ –º–∏—Ä–∞ '–í–∞–ª—å–¥–µ—Å':
--- –ù–ê–ß–ê–õ–û –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
{VALDES_LORE}
--- –ö–û–ù–ï–¶ –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
**–ó–û–õ–û–¢–´–ï –ü–†–ê–í–ò–õ–ê (–í–ê–ñ–ù–ï–ï –í–°–ï–ì–û): –ù–ï –ë–£–î–¨ –°–û–ê–í–¢–û–†–û–ú!**
–¢—ã –¥–æ–ª–∂–µ–Ω —É–ª—É—á—à–∞—Ç—å –¢–û–õ–¨–ö–û —Ç–æ, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –∏–≥—Ä–æ–∫. –°—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ:
1.  **–ù–ï –î–û–ë–ê–í–õ–Ø–ô –ù–û–í–´–• –î–ï–ô–°–¢–í–ò–ô:** –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≤—Å—Ç–∞–ª —Å –∫—Ä–æ–≤–∞—Ç–∏, —Ç—ã –º–æ–∂–µ—à—å –æ–ø–∏—Å–∞—Ç—å, –ö–ê–ö –æ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞–ª, –Ω–æ –ù–ï–õ–¨–ó–Ø –¥–æ–±–∞–≤–ª—è—Ç—å, —á—Ç–æ –æ–Ω –ø–æ—à–µ–ª –∫ –¥–≤–µ—Ä–∏.
2.  **–ù–ï –ü–†–ò–î–£–ú–´–í–ê–ô –ú–û–¢–ò–í–ê–¶–ò–Æ:** –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –∫—Ä–∏–∫–Ω—É–ª "–ë–õ–Ø–¢–¨", —Ç—ã –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–¥–∞—Ç—å —ç–º–æ—Ü–∏—é, –∞ –ù–ï –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É (–≥–æ–ª–æ–¥, –ø–ª–æ—Ö–æ–π —Å–æ–Ω).
3.  **–ù–ï –ú–ï–ù–Ø–ô –î–ò–ê–õ–û–ì–ò:** –ï—Å–ª–∏ —ç—Ç–æ –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏–µ –≤ –ø—É—Å—Ç–æ—Ç—É, –ù–ï –¥–æ–±–∞–≤–ª—è–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.
4.  **–ù–ï –ú–ï–ù–Ø–ô –ü–û–í–ï–°–¢–í–û–í–ê–ù–ò–ï (–õ–ò–¶–û):** –ï—Å–ª–∏ –ø–æ—Å—Ç –Ω–∞–ø–∏—Å–∞–Ω –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ ('–Ø –±–µ–≥—É'), —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ—Å—Ç **–û–ë–Ø–ó–ê–ù** –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞. –ï—Å–ª–∏ –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ ('–û–Ω –±–µ–∂–∏—Ç'), –æ–Ω –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ. –≠—Ç–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ.
**–ó–ê–î–ê–ß–ê 1: –ü–†–û–í–ï–†–ö–ê –ù–ê –ì–†–£–ë–´–ï –õ–û–†–ù–´–ï –û–®–ò–ë–ö–ò**
–ò—â–∏ —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ (–∞–≤—Ç–æ–º–∞—Ç—ã, –º–∞—à–∏–Ω—ã), –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –º–∞–≥–∏—è –¥–ª—è —Ä–∞—Å—ã. –ï—Å–ª–∏ –Ω–∞—à–µ–ª ‚Äî –≤–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç "–û–®–ò–ë–ö–ê:" —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º. –ú–∞—Ç –∏ —Å—Ç–∏–ª—å –∞—Ä—Ç–∞ –æ—à–∏–±–∫–æ–π –ù–ï —Å—á–∏—Ç–∞—é—Ç—Å—è.
**–ó–ê–î–ê–ß–ê 2: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–û–°–¢–ê (–µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç)**
–û–±—Ä–∞–±–æ—Ç–∞–π –ø–æ—Å—Ç —Å–æ–≥–ª–∞—Å–Ω–æ —É—Ä–æ–≤–Ω—é '{level}', —Å–æ–±–ª—é–¥–∞—è –≤—Å–µ "–ó–æ–ª–æ—Ç—ã–µ –ü—Ä–∞–≤–∏–ª–∞".
1.  **–£—Ä–æ–≤–µ–Ω—å '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏':**
    *   –¢–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É. –ú–∞—Ç –∑–∞–º–µ–Ω–∏ –Ω–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ß–µ—Ä—Ç!").
    *   –ù–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–ª—è–π.
2.  **–£—Ä–æ–≤–µ–Ω—å '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è':**
    *   –°–¥–µ–ª–∞–π —Ç–æ –∂–µ, —á—Ç–æ –∏ –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º.
    *   –î–æ–±–∞–≤—å –û–î–ù–û –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –æ–ø–∏—Å—ã–≤–∞—é—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ò–õ–ò —ç–º–æ—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–µ–º/—Å–ª–æ–≤–∞–º–∏.
3.  **–£—Ä–æ–≤–µ–Ω—å '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å':**
    *   –°–¥–µ–ª–∞–π —Ç–æ –∂–µ, —á—Ç–æ –∏ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º.
    *   –ö—Ä–∞—Å–æ—á–Ω–æ –æ–ø–∏—à–∏ **–∑–∞—è–≤–ª–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ**, —Å–æ—Ö—Ä–∞–Ω—è—è –ª–∏—Ü–æ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä, "–Ø –±–µ–≥—É –Ω–∞ —É–ª–∏—Ü—É" –º–æ–∂–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ "*–°—Ä—ã–≤–∞—è—Å—å —Å –º–µ—Å—Ç–∞, —è –≤—ã–±–µ–≥–∞—é –Ω–∞ —Ö–æ–ª–æ–¥–Ω—É—é —É–ª–∏—Ü—É, —á—É–≤—Å—Ç–≤—É—è, –∫–∞–∫ –≤–µ—Ç–µ—Ä –±—å–µ—Ç –≤ –ª–∏—Ü–æ.*"
**–§–ò–ù–ê–õ–¨–ù–û–ï –ü–†–ê–í–ò–õ–û:**
–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ. –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–µ–¥–∏—Å–ª–æ–≤–∏–π.
"""

def get_lore_prompt():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª–æ—Ä—É."""
    return f"""
–¢—ã ‚Äî –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π –º–∏—Ä–∞ '–í–∞–ª—å–¥–µ—Å'. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–≥—Ä–æ–∫–æ–≤, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–µ–±–µ —Ç–µ–∫—Å—Ç–µ —Å –ª–æ—Ä–æ–º –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.
**–¢–í–û–ò –ü–†–ê–í–ò–õ–ê:**
1.  **–ò–°–¢–û–ß–ù–ò–ö ‚Äî –ó–ê–ö–û–ù:** –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑–≤–Ω–µ.
2.  **–ù–ï –î–û–î–£–ú–´–í–ê–ô:** –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏: "–í –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞—Ä—Ö–∏–≤–∞—Ö –Ω–µ—Ç —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É."
3.  **–ë–£–î–¨ –¢–û–ß–ï–ù:** –î–∞–≤–∞–π —á—ë—Ç–∫–∏–µ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –ï—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ, –º–æ–∂–µ—à—å —Ü–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Ç–µ–∫—Å—Ç–∞.
4.  **–°–¢–ò–õ–¨:** –û—Ç–≤–µ—á–∞–π —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –≤ —Å—Ç–∏–ª–µ –º—É–¥—Ä–æ–≥–æ –ª–µ—Ç–æ–ø–∏—Å—Ü–∞.
–í–æ—Ç —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Ç–≤–æ–µ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π:
--- –ù–ê–ß–ê–õ–û –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
{VALDES_LORE}
--- –ö–û–ù–ï–¶ –î–û–ö–£–ú–ï–ù–¢–ê –° –õ–û–†–û–ú ---
"""

# --- 4. –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ô –ö–û–î (keep_alive, UI, —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–¥–æ–º –¥–æ—Å—Ç—É–ø–∞) ---
app = Flask('')
@app.route('/')
def home(): return "Bot is alive and running!"
def run(): app.run(host='0.0.0.0', port=8080)
def keep_alive(): Thread(target=run).start()

class OptimizedPostModal(ui.Modal, title='–í–∞—à —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ—Å—Ç'):
    def __init__(self, optimized_text: str):
        super().__init__()
        self.post_content = ui.TextInput(label="–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é", style=discord.TextStyle.paragraph, default=optimized_text, max_length=1800)
        self.add_item(self.post_content)
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.send_message("–û–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ.", ephemeral=True, delete_after=3)

class PostView(ui.View):
    def __init__(self, optimized_text: str):
        super().__init__(timeout=300)
        self.optimized_text = optimized_text
    @ui.button(label="üìù –ü–æ–∫–∞–∑–∞—Ç—å –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", style=discord.ButtonStyle.primary)
    async def show_modal_button(self, interaction: discord.Interaction, button: ui.Button):
        modal = OptimizedPostModal(self.optimized_text)
        await interaction.response.send_modal(modal)

DAILY_ACCESS_CODE = ""
CODE_FILE = "code.json"

def save_daily_code(code):
    data = {'code': code, 'date': datetime.now().strftime('%Y-%m-%d')}
    with open(CODE_FILE, 'w') as f:
        json.dump(data, f)

def load_daily_code():
    global DAILY_ACCESS_CODE
    try:
        with open(CODE_FILE, 'r') as f:
            data = json.load(f)
            if data['date'] == datetime.now().strftime('%Y-%m-%d'):
                DAILY_ACCESS_CODE = data['code']
                print(f"–ó–∞–≥—Ä—É–∂–µ–Ω —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞: {DAILY_ACCESS_CODE}")
                return
    except (FileNotFoundError, json.JSONDecodeError):
        print("–§–∞–π–ª —Å –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π.")
    
    new_code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    DAILY_ACCESS_CODE = new_code
    save_daily_code(new_code)
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –∫–æ–¥ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {DAILY_ACCESS_CODE}")

# --- 5. –ù–ê–°–¢–†–û–ô–ö–ê –ë–û–¢–ê ---
intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# --- 6. –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –ó–ê–î–ê–ß–ê –ì–ï–ù–ï–†–ê–¶–ò–ò –ö–û–î–ê ---
async def send_access_code_to_admin_channel(code: str, title: str, description: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ —Å –∫–æ–¥–æ–º –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –∞–¥–º–∏–Ω—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä."""
    try:
        admin_channel = bot.get_channel(int(CODE_CHANNEL_ID))
        if admin_channel:
            embed = discord.Embed(
                title=title,
                description=description,
                color=discord.Color.gold(),
                timestamp=datetime.now()
            )
            embed.add_field(name="–ö–æ–¥", value=f"```{code}```")
            embed.set_footer(text="–≠—Ç–æ—Ç –∫–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ –∫–æ–Ω—Ü–∞ —Ç–µ–∫—É—â–∏—Ö —Å—É—Ç–æ–∫ (–ø–æ UTC).")
            await admin_channel.send(embed=embed)
        else:
            print(f"–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {CODE_CHANNEL_ID} –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞.")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: {e}")

@tasks.loop(time=time(hour=0, minute=0, tzinfo=timezone.utc))
async def update_code_task():
    global DAILY_ACCESS_CODE
    
    new_code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    DAILY_ACCESS_CODE = new_code
    save_daily_code(new_code)
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ–¥: {new_code}")
    
    await send_access_code_to_admin_channel(
        code=new_code,
        title="üîë –ù–æ–≤—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞",
        description="–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/update_lore_by_name` –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 24 —á–∞—Å–∞:"
    )

@update_code_task.before_loop
async def before_update_code_task():
    await bot.wait_until_ready()

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    load_lore_from_file()
    load_daily_code()
    
    if not update_code_task.is_running():
        update_code_task.start()
        
    await send_access_code_to_admin_channel(
        code=DAILY_ACCESS_CODE,
        title="‚öôÔ∏è –¢–µ–∫—É—â–∏–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ (–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞)",
        description="–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω. –í–æ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:"
    )
    
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

# --- 7. –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê ---
@bot.tree.command(name="update_lore_by_name", description="[–ê–î–ú–ò–ù] –û–±–Ω–æ–≤–ª—è–µ—Ç –ª–æ—Ä –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.")
@app_commands.describe(
    category_name="–¢–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ª–æ—Ä–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏",
    exclude_names="–ù–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ë–ï–ó –ø—Ä–æ–±–µ–ª–æ–≤",
    access_code="–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
)
async def update_lore_by_name(interaction: discord.Interaction, category_name: str, exclude_names: str, access_code: str):
    is_owner = str(interaction.user.id) == OWNER_USER_ID
    is_admin = interaction.user.guild_permissions.administrator

    if not (is_owner or is_admin):
        await interaction.response.send_message("‚ùå **–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞:** –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True)
        return
        
    if str(interaction.guild.id) != MAIN_GUILD_ID:
        await interaction.response.send_message("‚ùå **–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞:** –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
        return

    if access_code != DAILY_ACCESS_CODE:
        await interaction.response.send_message("‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞.** –ü–æ–ª—É—á–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
        return
        
    await interaction.response.defer(ephemeral=True, thinking=True)
    
    target_category = discord.utils.get(interaction.guild.categories, name=category_name)
    if not target_category:
        await interaction.followup.send(f"‚ùå **–û—à–∏–±–∫–∞:** –ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´{category_name}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è.", ephemeral=True)
        return

    excluded_channel_names = {name.strip().lower() for name in exclude_names.split(',')}
    
    full_lore_text = ""
    parsed_channels_count = 0
    total_messages_count = 0
    sorted_channels = sorted(target_category.text_channels, key=lambda c: c.position)

    for channel in sorted_channels:
        if channel.name.lower() in excluded_channel_names:
            continue
        full_lore_text += f"\n--- –ù–ê–ß–ê–õ–û –ö–ê–ù–ê–õ–ê: {channel.name} ---\n\n"
        async for message in channel.history(limit=500, oldest_first=True):
            if message.content and not message.author.bot:
                full_lore_text += message.content + "\n\n"
                total_messages_count += 1
        full_lore_text += f"--- –ö–û–ù–ï–¶ –ö–ê–ù–ê–õ–ê: {channel.name} ---\n"
        parsed_channels_count += 1

    try:
        with open("file.txt", "w", encoding="utf-8") as f:
            f.write(full_lore_text)
        load_lore_from_file()
        file_size = os.path.getsize("file.txt") / 1024
        embed = discord.Embed(title="‚úÖ –õ–æ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", description="–§–∞–π–ª `file.txt` –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.", color=discord.Color.green())
        embed.add_field(name="–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–Ω–∞–ª–æ–≤", value=str(parsed_channels_count), inline=True)
        embed.add_field(name="–°–æ–±—Ä–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π", value=str(total_messages_count), inline=True)
        embed.add_field(name="–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞", value=f"{file_size:.2f} –ö–ë", inline=True)
        
        await interaction.followup.send(
            embed=embed,
            file=discord.File("file.txt"),
            ephemeral=True
        )
        
    except Exception as e:
        await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}", ephemeral=True)

@bot.tree.command(name="optimize_post", description="–£–ª—É—á—à–∞–µ—Ç –†–ü-–ø–æ—Å—Ç —Å –ø–æ–º–æ—â—å—é —É–¥–æ–±–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.")
@app_commands.describe(post_text="–¢–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞.", optimization_level="–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —É–ª—É—á—à–µ–Ω–∏—è.", image="(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.")
@app_commands.choices(optimization_level=[
    discord.app_commands.Choice(name="–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏", value="minimal"),
    discord.app_commands.Choice(name="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", value="standard"),
    discord.app_commands.Choice(name="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å", value="creative"),
])
async def optimize_post(interaction: discord.Interaction, post_text: str, optimization_level: discord.app_commands.Choice[str], image: discord.Attachment = None):
    await interaction.response.defer(ephemeral=True, thinking=True)
    level_map = {"minimal": "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏", "standard": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", "creative": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"}
    prompt = get_optimizer_prompt(level_map[optimization_level.value])
    content_to_send = [prompt, f"\n\n–ü–æ—Å—Ç –∏–≥—Ä–æ–∫–∞:\n---\n{post_text}"]
    if image and image.content_type and image.content_type.startswith("image/"):
        try:
            image_bytes = await image.read()
            pil_image = Image.open(io.BytesIO(image_bytes))
            content_to_send.append(pil_image)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
    try:
        response = await gemini_model.generate_content_async(content_to_send)
        result_text = response.text.strip()
        if result_text.startswith("–û–®–ò–ë–ö–ê:"):
            error_embed = discord.Embed(title="‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≥—Ä—É–±–∞—è –ª–æ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞!", description=result_text.replace("–û–®–ò–ë–ö–ê:", "").strip(), color=discord.Color.red())
            await interaction.followup.send(embed=error_embed, ephemeral=True)
        else:
            embed = discord.Embed(title="‚ú® –í–∞—à –ø–æ—Å—Ç –±—ã–ª –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!", color=discord.Color.gold())
            embed.add_field(name="‚ñ∂Ô∏è –û—Ä–∏–≥–∏–Ω–∞–ª:", value=f"```\n{post_text[:1000]}\n```", inline=False)
            embed.add_field(name="‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è (–ø—Ä–µ–≤—å—é):", value=f"{result_text[:1000]}...", inline=False)
            embed.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç.")
            view = PostView(result_text)
            await interaction.followup.send(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        error_embed = discord.Embed(title="üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞", description="–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", color=discord.Color.dark_red())
        await interaction.followup.send(embed=error_embed, ephemeral=True)

@bot.tree.command(name="ask_lore", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ –º–∏—Ä—É, –ø—Ä–∞–≤–∏–ª–∞–º –∏ –ª–æ—Ä—É '–í–∞–ª—å–¥–µ—Å–∞'")
@app_commands.describe(question="–í–∞—à –≤–æ–ø—Ä–æ—Å –•—Ä–∞–Ω–∏—Ç–µ–ª—é –∑–Ω–∞–Ω–∏–π.")
async def ask_lore(interaction: discord.Interaction, question: str):
    await interaction.response.defer(ephemeral=False)
    try:
        prompt = get_lore_prompt()
        response = await gemini_model.generate_content_async([prompt, f"\n\n–í–æ–ø—Ä–æ—Å –∏–≥—Ä–æ–∫–∞: {question}"])
        answer_text = response.text.strip()
        embed = discord.Embed(title="üìú –û—Ç–≤–µ—Ç –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤ –í–∞–ª—å–¥–µ—Å–∞", description=answer_text, color=discord.Color.blue())
        embed.add_field(name="–í–∞—à –∑–∞–ø—Ä–æ—Å:", value=question, inline=False)
        embed.set_footer(text=f"–û—Ç–≤–µ—Ç–∏–ª –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π | –ó–∞–ø—Ä–æ—Å–∏–ª: {interaction.user.display_name}")
        await interaction.followup.send(embed=embed)
    except Exception as e:
        error_embed = discord.Embed(title="üö´ –û—à–∏–±–∫–∞ –≤ –∞—Ä—Ö–∏–≤–µ", description="–•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–∑-–∑–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏.", color=discord.Color.dark_red())
        await interaction.followup.send(embed=error_embed, ephemeral=True)

# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
if __name__ == "__main__":
    keep_alive()
    bot.run(DISCORD_TOKEN)
