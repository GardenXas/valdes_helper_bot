# -*- coding: utf-8 -*-

# --- 1. –ò–ú–ü–û–†–¢–´ –ò –ù–ê–ß–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ---
import discord
from discord import ui, app_commands
from discord.ext import commands
import google.generativeai as genai
import os
from dotenv import load_dotenv
from flask import Flask
from threading import Thread
from PIL import Image
import io

# –ó–∞–≥—Ä—É–∑–∫–∞ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini
load_dotenv()
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

if not DISCORD_TOKEN or not GEMINI_API_KEY:
    raise ValueError("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ç–æ–∫–µ–Ω—ã –≤ .env")

genai.configure(api_key=GEMINI_API_KEY)
gemini_model = genai.GenerativeModel('gemini-1.5-flash-latest')

# --- 2. –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ü–ï–†–ï–ú–ï–ù–ù–ê–Ø –ò –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –õ–û–†–ê ---
VALDES_LORE = ""

def load_lore_from_file():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç/–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –ª–æ—Ä –∏–∑ —Ñ–∞–π–ª–∞ –≤ –ø–∞–º—è—Ç—å –±–æ—Ç–∞."""
    global VALDES_LORE
    try:
        with open("file.txt", "r", encoding="utf-8") as f:
            VALDES_LORE = f.read()
        print("–õ–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ø–∞–º—è—Ç—å.")
    except FileNotFoundError:
        print("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –§–∞–π–ª 'file.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        VALDES_LORE = "–õ–æ—Ä –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞."

# --- 3. –°–ò–°–¢–ï–ú–ù–´–ï –ü–†–û–ú–ü–¢–´ ---
def get_optimizer_prompt(level):
    # (–≠—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è)
    return f"..."

def get_lore_prompt():
    # (–≠—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è)
    return f"..."

# --- 4. –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ô –ö–û–î (keep_alive, UI –∏ —Ç.–¥.) ---
# (–≠—Ç–æ—Ç –±–ª–æ–∫ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è)
app = Flask('')
@app.route('/')
def home(): return "Bot is alive and running!"
def run(): app.run(host='0.0.0.0', port=8080)
def keep_alive(): Thread(target=run).start()

class OptimizedPostModal(ui.Modal, title='–í–∞—à —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ—Å—Ç'):
    # ... (–∫–æ–¥ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è)
    def __init__(self, optimized_text: str):
        super().__init__()
        self.post_content = ui.TextInput(label="–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é", style=discord.TextStyle.paragraph, default=optimized_text, max_length=1800)
        self.add_item(self.post_content)
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.send_message("–û–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ.", ephemeral=True, delete_after=3)

class PostView(ui.View):
    # ... (–∫–æ–¥ –∫–Ω–æ–ø–∫–∏ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è)
    def __init__(self, optimized_text: str):
        super().__init__(timeout=300)
        self.optimized_text = optimized_text
    @ui.button(label="üìù –ü–æ–∫–∞–∑–∞—Ç—å –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", style=discord.ButtonStyle.primary)
    async def show_modal_button(self, interaction: discord.Interaction, button: ui.Button):
        modal = OptimizedPostModal(self.optimized_text)
        await interaction.response.send_modal(modal)

# --- 5. –ù–ê–°–¢–†–û–ô–ö–ê –ë–û–¢–ê –ò –ö–û–ú–ê–ù–î ---
intents = discord.Intents.default()
intents.messages = True
intents.message_content = True # –í–∫–ª—é—á–∏ —ç—Ç–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–æ—Ç–∞ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ Discord!
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    load_lore_from_file() # –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ—Ä –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

# --- –ù–û–í–ê–Ø –£–î–û–ë–ù–ê–Ø –ö–û–ú–ê–ù–î–ê –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø –õ–û–†–ê ---

@bot.tree.command(name="update_lore_by_name", description="[–ê–î–ú–ò–ù] –°–æ–±–∏—Ä–∞–µ—Ç –ª–æ—Ä –ø–æ –ò–ú–ï–ù–ê–ú –∫–∞–Ω–∞–ª–æ–≤ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç file.txt")
@app_commands.describe(
    category_name="–¢–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ª–æ—Ä–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏",
    exclude_names="–ù–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ë–ï–ó –ø—Ä–æ–±–µ–ª–æ–≤"
)
@app_commands.checks.has_permissions(administrator=True) # –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
async def update_lore_by_name(interaction: discord.Interaction, category_name: str, exclude_names: str):
    await interaction.response.defer(ephemeral=True, thinking=True)
    
    # –ò—â–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∏–º–µ–Ω–∏
    target_category = discord.utils.get(interaction.guild.categories, name=category_name)
    
    if not target_category:
        await interaction.followup.send(f"‚ùå **–û—à–∏–±–∫–∞:** –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´{category_name}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–º—è –≤–≤–µ–¥–µ–Ω–æ –≤ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∫–∞–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
        return

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    excluded_channel_names = {name.strip().lower() for name in exclude_names.split(',')}
    
    full_lore_text = ""
    parsed_channels_count = 0
    total_messages_count = 0

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã –ø–æ –∏—Ö –ø–æ–∑–∏—Ü–∏–∏ –≤ Discord
    sorted_channels = sorted(target_category.text_channels, key=lambda c: c.position)

    for channel in sorted_channels:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        if channel.name.lower() in excluded_channel_names:
            continue

        full_lore_text += f"\n--- –ù–ê–ß–ê–õ–û –ö–ê–ù–ê–õ–ê: {channel.name} ---\n\n"
        
        # –ß–∏—Ç–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ç —Å–∞–º—ã—Ö —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∫ —Å–∞–º—ã–º –Ω–æ–≤—ã–º
        async for message in channel.history(limit=500, oldest_first=True):
            if message.content and not message.author.bot: # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –æ—Ç –ª—é–¥–µ–π
                full_lore_text += message.content + "\n\n"
                total_messages_count += 1
        
        full_lore_text += f"--- –ö–û–ù–ï–¶ –ö–ê–ù–ê–õ–ê: {channel.name} ---\n"
        parsed_channels_count += 1

    try:
        # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        with open("file.txt", "w", encoding="utf-8") as f:
            f.write(full_lore_text)

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ª–æ—Ä –≤ –ø–∞–º—è—Ç—å –±–æ—Ç–∞, —á—Ç–æ–±—ã –æ–Ω —Å—Ä–∞–∑—É –Ω–∞—á–∞–ª –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
        load_lore_from_file()

        file_size = os.path.getsize("file.txt") / 1024 # –†–∞–∑–º–µ—Ä –≤ –ö–ë

        embed = discord.Embed(
            title="‚úÖ –õ–æ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!",
            description="–§–∞–π–ª `file.txt` –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω —Å–≤–µ–∂–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.",
            color=discord.Color.green()
        )
        embed.add_field(name="–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–Ω–∞–ª–æ–≤", value=str(parsed_channels_count), inline=True)
        embed.add_field(name="–°–æ–±—Ä–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π", value=str(total_messages_count), inline=True)
        embed.add_field(name="–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞", value=f"{file_size:.2f} –ö–ë", inline=True)
        embed.set_footer(text="–ë–æ—Ç —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –ª–æ—Ä–∞.")
        
        await interaction.followup.send(embed=embed, ephemeral=True)

    except Exception as e:
        await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: {e}", ephemeral=True)


# --- –¢–í–û–ò –°–¢–ê–†–´–ï –ö–û–ú–ê–ù–î–´ (–æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
# ... (–∑–¥–µ—Å—å –∏–¥—É—Ç —Ç–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã /optimize_post –∏ /ask_lore –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
@bot.tree.command(name="optimize_post", description="–£–ª—É—á—à–∞–µ—Ç –†–ü-–ø–æ—Å—Ç —Å –ø–æ–º–æ—â—å—é —É–¥–æ–±–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.")
@app_commands.describe(post_text="–¢–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è.", optimization_level="–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Å–∏–ª—å–Ω–æ –Ω—É–∂–Ω–æ —É–ª—É—á—à–∞—Ç—å –ø–æ—Å—Ç.", image="(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.")
@app_commands.choices(optimization_level=[discord.app_commands.Choice(name="–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏", value="minimal"), discord.app_commands.Choice(name="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", value="standard"), discord.app_commands.Choice(name="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å", value="creative")])
async def optimize_post(interaction: discord.Interaction, post_text: str, optimization_level: discord.app_commands.Choice[str], image: discord.Attachment = None):
    # ... (—Ç–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å)
    await interaction.response.defer(ephemeral=True, thinking=True)
    level_map = {"minimal": "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏", "standard": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", "creative": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"}
    prompt = get_optimizer_prompt(level_map[optimization_level.value])
    content_to_send = [prompt, f"\n\n–ü–æ—Å—Ç –∏–≥—Ä–æ–∫–∞:\n---\n{post_text}"]
    if image and image.content_type and image.content_type.startswith("image/"):
        image_bytes = await image.read()
        pil_image = Image.open(io.BytesIO(image_bytes))
        content_to_send.append(pil_image)
    try:
        response = await gemini_model.generate_content_async(content_to_send)
        result_text = response.text.strip()
        if result_text.startswith("–û–®–ò–ë–ö–ê:"):
            error_embed = discord.Embed(title="‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≥—Ä—É–±–∞—è –ª–æ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞!", description=result_text.replace("–û–®–ò–ë–ö–ê:", "").strip(), color=discord.Color.red())
            await interaction.followup.send(embed=error_embed, ephemeral=True)
        else:
            embed = discord.Embed(title="‚ú® –í–∞—à –ø–æ—Å—Ç –±—ã–ª –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω!", color=discord.Color.gold())
            embed.add_field(name="‚ñ∂Ô∏è –û—Ä–∏–≥–∏–Ω–∞–ª:", value=f"```\n{post_text[:1000]}\n```", inline=False)
            embed.add_field(name="‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è (–ø—Ä–µ–≤—å—é):", value=f"{result_text[:1000]}...", inline=False)
            embed.set_footer(text=f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç.")
            view = PostView(result_text)
            await interaction.followup.send(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        error_embed = discord.Embed(title="üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞", description="–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å.", color=discord.Color.dark_red())
        await interaction.followup.send(embed=error_embed, ephemeral=True)

@bot.tree.command(name="ask_lore", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ –º–∏—Ä—É, –ø—Ä–∞–≤–∏–ª–∞–º –∏ –ª–æ—Ä—É '–í–∞–ª—å–¥–µ—Å–∞'")
@app_commands.describe(question="–í–∞—à –≤–æ–ø—Ä–æ—Å –•—Ä–∞–Ω–∏—Ç–µ–ª—é –∑–Ω–∞–Ω–∏–π.")
async def ask_lore(interaction: discord.Interaction, question: str):
    # ... (—Ç–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å)
    await interaction.response.defer(ephemeral=False)
    try:
        prompt = get_lore_prompt()
        response = await gemini_model.generate_content_async([prompt, f"\n\n–í–æ–ø—Ä–æ—Å –∏–≥—Ä–æ–∫–∞: {question}"])
        answer_text = response.text.strip()
        embed = discord.Embed(title="üìú –û—Ç–≤–µ—Ç –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤ –í–∞–ª—å–¥–µ—Å–∞", description=answer_text, color=discord.Color.blue())
        embed.add_field(name="–í–∞—à –∑–∞–ø—Ä–æ—Å:", value=question, inline=False)
        embed.set_footer(text=f"–û—Ç–≤–µ—Ç–∏–ª –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π | –ó–∞–ø—Ä–æ—Å–∏–ª: {interaction.user.display_name}")
        await interaction.followup.send(embed=embed)
    except Exception as e:
        error_embed = discord.Embed(title="üö´ –û—à–∏–±–∫–∞ –≤ –∞—Ä—Ö–∏–≤–µ", description="–•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–Ω–∞–Ω–∏–π –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç.", color=discord.Color.dark_red())
        await interaction.followup.send(embed=error_embed, ephemeral=True)

# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
if __name__ == "__main__":
    keep_alive()
    bot.run(DISCORD_TOKEN)
